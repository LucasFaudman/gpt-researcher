"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8995],{7516:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"examples/examples","title":"Simple Run","description":"Run PIP Package","source":"@site/docs/examples/examples.md","sourceDirName":"examples","slug":"/examples/","permalink":"/docs/examples/","draft":false,"unlisted":false,"editUrl":"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/examples/examples.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Detailed Report","permalink":"/docs/examples/detailed_report"},"next":{"title":"Hybrid Research","permalink":"/docs/examples/hybrid_research"}}');var a=t(4848),o=t(8453);const s={},p="Simple Run",i={},c=[{value:"Run PIP Package",id:"run-pip-package",level:3}];function m(e){const r={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"simple-run",children:"Simple Run"})}),"\n",(0,a.jsx)(r.h3,{id:"run-pip-package",children:"Run PIP Package"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-python",children:'from gpt_researcher import GPTResearcher\nimport asyncio\n\n### Using Quick Run\nasync def main():\n    """\n    This is a sample script that shows how to run a research report.\n    """\n    # Query\n    query = "What happened in the latest burning man floods?"\n\n    # Report Type\n    report_type = "research_report"\n\n    # Initialize the researcher\n    researcher = GPTResearcher(query=query, report_type=report_type, config_path=None)\n    # Conduct research on the given query\n    await researcher.conduct_research()\n    # Write the report\n    report = await researcher.write_report()\n    \n    return report\n\n\nif __name__ == "__main__":\n    asyncio.run(main())\n\n# Custom Report Formatting\n\n### Using Custom Prompts\n```python\nfrom gpt_researcher import GPTResearcher\nimport asyncio\n\n\nasync def main():\n    """\n    This example shows how to use custom prompts to control report formatting.\n    """\n    # Query\n    query = "What are the latest advancements in renewable energy?"\n\n    # Report Type\n    report_type = "research_report"\n\n    # Initialize the researcher\n    researcher = GPTResearcher(query=query, report_type=report_type)\n    \n    # Conduct research on the given query\n    await researcher.conduct_research()\n    \n    # Generate a standard report\n    standard_report = await researcher.write_report()\n    print("Standard Report Generated")\n    \n    # Generate a short, concise report using custom_prompt\n    custom_prompt = "Provide a concise summary in 2 paragraphs without citations."\n    short_report = await researcher.write_report(custom_prompt=custom_prompt)\n    print("Short Report Generated")\n    \n    # Generate a bullet-point format report\n    bullet_prompt = "List the top 5 advancements as bullet points with brief explanations."\n    bullet_report = await researcher.write_report(custom_prompt=bullet_prompt)\n    print("Bullet-Point Report Generated")\n    \n    return standard_report, short_report, bullet_report\n\n\nif __name__ == "__main__":\n    asyncio.run(main())\n\nFor more comprehensive examples of using custom prompts, see the `custom_prompt.py` file included in the examples directory.\n'})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>p});var n=t(6540);const a={},o=n.createContext(a);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function p(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);