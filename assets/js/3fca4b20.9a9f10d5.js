"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[700],{810:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"gpt-researcher/handling-logs/simple-logs-example","title":"Simple Logs Example","description":"Here is a snippet of code to help you handle the streaming logs of your Research tasks.","source":"@site/docs/gpt-researcher/handling-logs/simple-logs-example.md","sourceDirName":"gpt-researcher/handling-logs","slug":"/gpt-researcher/handling-logs/simple-logs-example","permalink":"/docs/gpt-researcher/handling-logs/simple-logs-example","draft":false,"unlisted":false,"editUrl":"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/gpt-researcher/handling-logs/simple-logs-example.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"All About Logs","permalink":"/docs/gpt-researcher/handling-logs/all-about-logs"},"next":{"title":"Langsmith Logs","permalink":"/docs/gpt-researcher/handling-logs/langsmith-logs"}}');var o=r(4848),s=r(8453);const a={},i="Simple Logs Example",l={},c=[];function p(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"simple-logs-example",children:"Simple Logs Example"})}),"\n",(0,o.jsx)(n.p,{children:"Here is a snippet of code to help you handle the streaming logs of your Research tasks."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from typing import Dict, Any\nimport asyncio\nfrom gpt_researcher import GPTResearcher\n\nclass CustomLogsHandler:\n    """A custom Logs handler class to handle JSON data."""\n    def __init__(self):\n        self.logs = []  # Initialize logs to store data\n\n    async def send_json(self, data: Dict[str, Any]) -> None:\n        """Send JSON data and log it."""\n        self.logs.append(data)  # Append data to logs\n        print(f"My custom Log: {data}")  # For demonstration, print the log\n\nasync def run():\n    # Define the necessary parameters with sample values\n    \n    query = "What happened in the latest burning man floods?"\n    report_type = "research_report"  # Type of report to generate\n    report_source = "online"  # Could specify source like \'online\', \'books\', etc.\n    tone = "informative"  # Tone of the report (\'informative\', \'casual\', etc.)\n    config_path = None  # Path to a config file, if needed\n    \n    # Initialize researcher with a custom WebSocket\n    custom_logs_handler = CustomLogsHandler()\n\n    researcher = GPTResearcher(\n        query=query,\n        report_type=report_type,\n        report_source=report_source,\n        tone=tone,\n        config_path=config_path,\n        websocket=custom_logs_handler\n    )\n\n    await researcher.conduct_research()  # Conduct the research\n    report = await researcher.write_report()  # Write the research report\n\n    return report\n\n# Run the asynchronous function using asyncio\nif __name__ == "__main__":\n    asyncio.run(run())\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The data from the research process will be logged and stored in the ",(0,o.jsx)(n.code,{children:"CustomLogsHandler"})," instance. You can customize the logging behavior as needed for your application."]}),"\n",(0,o.jsx)(n.p,{children:"Here's a sample of the output:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'{\n    "type": "logs",\n    "content": "added_source_url",\n    "output": "\u2705 Added source url to research: https://www.npr.org/2023/09/28/1202110410/how-rumors-and-conspiracy-theories-got-in-the-way-of-mauis-fire-recovery\\n",\n    "metadata": "https://www.npr.org/2023/09/28/1202110410/how-rumors-and-conspiracy-theories-got-in-the-way-of-mauis-fire-recovery"\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"metadata"})," field will include whatever metadata is relevant to the log entry. Let the script above run to completion for the full logs output of a given research task."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);