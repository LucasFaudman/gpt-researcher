"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8717],{2541:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"gpt-researcher/search-engines/test-your-retriever","title":"Testing your Retriever","description":"To test your retriever, you can use the following code snippet. The script will search for a sub-query and display the search results.","source":"@site/docs/gpt-researcher/search-engines/test-your-retriever.md","sourceDirName":"gpt-researcher/search-engines","slug":"/gpt-researcher/search-engines/test-your-retriever","permalink":"/docs/gpt-researcher/search-engines/test-your-retriever","draft":false,"unlisted":false,"editUrl":"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/gpt-researcher/search-engines/test-your-retriever.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Retrievers","permalink":"/docs/gpt-researcher/search-engines/"},"next":{"title":"MCP Integration with GPT Researcher","permalink":"/docs/gpt-researcher/retrievers/mcp-configs"}}');var s=t(4848),i=t(8453);const o={},a="Testing your Retriever",c={},h=[];function u(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"testing-your-retriever",children:"Testing your Retriever"})}),"\n",(0,s.jsx)(r.p,{children:"To test your retriever, you can use the following code snippet. The script will search for a sub-query and display the search results."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import asyncio\nfrom dotenv import load_dotenv\nfrom gpt_researcher.config.config import Config\nfrom gpt_researcher.actions.retriever import get_retrievers\nfrom gpt_researcher.skills.researcher import ResearchConductor\nimport pprint\n# Load environment variables from .env file\nload_dotenv()\n\nasync def test_scrape_data_by_query():\n    # Initialize the Config object\n    config = Config()\n\n    # Retrieve the retrievers based on the current configuration\n    retrievers = get_retrievers({}, config)\n    print("Retrievers:", retrievers)\n\n    # Create a mock researcher object with necessary attributes\n    class MockResearcher:\n        def init(self):\n            self.retrievers = retrievers\n            self.cfg = config\n            self.verbose = True\n            self.websocket = None\n            self.scraper_manager = None  # Mock or implement scraper manager\n            self.vector_store = None  # Mock or implement vector store\n\n    researcher = MockResearcher()\n    research_conductor = ResearchConductor(researcher)\n    # print(\'research_conductor\',dir(research_conductor))\n    # print(\'MockResearcher\',dir(researcher))\n    # Define a sub-query to test\n    sub_query = "design patterns for autonomous ai agents"\n\n    # Iterate through all retrievers\n    for retriever_class in retrievers:\n        # Instantiate the retriever with the sub-query\n        retriever = retriever_class(sub_query)\n\n        # Perform the search using the current retriever\n        search_results = await asyncio.to_thread(\n            retriever.search, max_results=10\n        )\n\n        print("\\033[35mSearch results:\\033[0m")\n        pprint.pprint(search_results, indent=4, width=80)\n\nif __name__ == "__main__":\n    asyncio.run(test_scrape_data_by_query())\n'})}),"\n",(0,s.jsx)(r.p,{children:"The output of the search results will include the title, body, and href of each search result. For example:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'[{   \n    "body": "Jun 5, 2024 ... Three AI Design Patterns of Autonomous "\n                "Agents. Overview of the Three Patterns. Three notable AI "\n                "design patterns for autonomous agents include:.",\n    "href": "https://accredianpublication.medium.com/building-smarter-systems-the-role-of-agentic-design-patterns-in-genai-13617492f5df",\n    "title": "Building Smarter Systems: The Role of Agentic Design "\n                "Patterns in ..."},\n    ...]\n'})})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>a});var n=t(6540);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);