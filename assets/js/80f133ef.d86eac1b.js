"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4151],{2911:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"gpt-researcher/gptr/pip-package","title":"PIP Package","description":"PyPI version","source":"@site/docs/gpt-researcher/gptr/pip-package.md","sourceDirName":"gpt-researcher/gptr","slug":"/gpt-researcher/gptr/pip-package","permalink":"/docs/gpt-researcher/gptr/pip-package","draft":false,"unlisted":false,"editUrl":"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/gpt-researcher/gptr/pip-package.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Running on Linux","permalink":"/docs/gpt-researcher/getting-started/linux-deployment"},"next":{"title":"npm package","permalink":"/docs/gpt-researcher/gptr/npm-package"}}');var n=s(4848),a=s(8453);const c={},o="PIP Package",i={},h=[{value:"Steps to Install GPT Researcher",id:"steps-to-install-gpt-researcher",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Specific Examples",id:"specific-examples",level:2},{value:"Example 1: Research Report",id:"example-1-research-report",level:3},{value:"Example 2: Resource Report",id:"example-2-resource-report",level:3},{value:"Example 3: Outline Report",id:"example-3-outline-report",level:3},{value:"Integration with Web Frameworks",id:"integration-with-web-frameworks",level:2},{value:"FastAPI Example",id:"fastapi-example",level:3},{value:"Flask Example",id:"flask-example",level:3},{value:"Getters and Setters",id:"getters-and-setters",level:2},{value:"Get Research Sources",id:"get-research-sources",level:3},{value:"Get Research Context",id:"get-research-context",level:3},{value:"Get Research Costs",id:"get-research-costs",level:3},{value:"Get Research Images",id:"get-research-images",level:3},{value:"Get Research Sources",id:"get-research-sources-1",level:3},{value:"Set Verbose",id:"set-verbose",level:3},{value:"Add Costs",id:"add-costs",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Customizing the Research Process",id:"customizing-the-research-process",level:3},{value:"Handling Research Results",id:"handling-research-results",level:3},{value:"Customizing Report Generation with Custom Prompts",id:"customizing-report-generation-with-custom-prompts",level:3},{value:"Working with Research Context",id:"working-with-research-context",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"pip-package",children:"PIP Package"})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"https://badge.fury.io/py/gpt-researcher",children:(0,n.jsx)(r.img,{src:"https://badge.fury.io/py/gpt-researcher.svg",alt:"PyPI version"})}),"\n",(0,n.jsx)(r.a,{href:"https://colab.research.google.com/github/assafelovic/gpt-researcher/blob/master/docs/docs/examples/pip-run.ipynb",children:(0,n.jsx)(r.img,{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})})]}),"\n",(0,n.jsxs)(r.p,{children:["\ud83c\udf1f ",(0,n.jsx)(r.strong,{children:"Exciting News!"})," Now, you can integrate ",(0,n.jsx)(r.code,{children:"gpt-researcher"})," with your apps seamlessly!"]}),"\n",(0,n.jsx)(r.h2,{id:"steps-to-install-gpt-researcher",children:"Steps to Install GPT Researcher"}),"\n",(0,n.jsx)(r.p,{children:"Follow these easy steps to get started:"}),"\n",(0,n.jsxs)(r.ol,{start:"0",children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Pre-requisite"}),": Ensure Python 3.10+ is installed on your machine \ud83d\udcbb"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Install gpt-researcher"}),": Grab the official package from ",(0,n.jsx)(r.a,{href:"https://pypi.org/project/gpt-researcher/",children:"PyPi"}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"pip install gpt-researcher\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"2",children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Environment Variables:"})," Create a .env file with your OpenAI API key or simply export it"]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"export OPENAI_API_KEY={Your OpenAI API Key here}\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"export TAVILY_API_KEY={Your Tavily API Key here}\n"})}),"\n",(0,n.jsxs)(r.ol,{start:"3",children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.strong,{children:"Start using GPT Researcher in your own codebase"})}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from gpt_researcher import GPTResearcher\nimport asyncio\n\nasync def get_report(query: str, report_type: str):\n    researcher = GPTResearcher(query, report_type)\n    research_result = await researcher.conduct_research()\n    report = await researcher.write_report()\n    \n    # Get additional information\n    research_context = researcher.get_research_context()\n    research_costs = researcher.get_costs()\n    research_images = researcher.get_research_images()\n    research_sources = researcher.get_research_sources()\n    \n    return report, research_context, research_costs, research_images, research_sources\n\nif __name__ == "__main__":\n    query = "what team may win the NBA finals?"\n    report_type = "research_report"\n\n    report, context, costs, images, sources = asyncio.run(get_report(query, report_type))\n    \n    print("Report:")\n    print(report)\n    print("\\nResearch Costs:")\n    print(costs)\n    print("\\nNumber of Research Images:")\n    print(len(images))\n    print("\\nNumber of Research Sources:")\n    print(len(sources))\n'})}),"\n",(0,n.jsx)(r.h2,{id:"specific-examples",children:"Specific Examples"}),"\n",(0,n.jsx)(r.h3,{id:"example-1-research-report",children:"Example 1: Research Report"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'query = "Latest developments in renewable energy technologies"\nreport_type = "research_report"\n'})}),"\n",(0,n.jsx)(r.h3,{id:"example-2-resource-report",children:"Example 2: Resource Report"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'query = "List of top AI conferences in 2023"\nreport_type = "resource_report"\n'})}),"\n",(0,n.jsx)(r.h3,{id:"example-3-outline-report",children:"Example 3: Outline Report"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'query = "Outline for an article on the impact of AI in education"\nreport_type = "outline_report"\n'})}),"\n",(0,n.jsx)(r.h2,{id:"integration-with-web-frameworks",children:"Integration with Web Frameworks"}),"\n",(0,n.jsx)(r.h3,{id:"fastapi-example",children:"FastAPI Example"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from fastapi import FastAPI\nfrom gpt_researcher import GPTResearcher\nimport asyncio\n\napp = FastAPI()\n\n@app.get("/report/{report_type}")\nasync def get_report(query: str, report_type: str) -> dict:\n    researcher = GPTResearcher(query, report_type)\n    research_result = await researcher.conduct_research()\n    report = await researcher.write_report()\n    \n    source_urls = researcher.get_source_urls()\n    research_costs = researcher.get_costs()\n    research_images = researcher.get_research_images()\n    research_sources = researcher.get_research_sources()\n    \n    return {\n        "report": report,\n        "source_urls": source_urls,\n        "research_costs": research_costs,\n        "num_images": len(research_images),\n        "num_sources": len(research_sources)\n    }\n\n# Run the server\n# uvicorn main:app --reload\n'})}),"\n",(0,n.jsx)(r.h3,{id:"flask-example",children:"Flask Example"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Pre-requisite"}),": Install flask with the async extra."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"pip install 'flask[async]'\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'from flask import Flask, request, jsonify\nfrom gpt_researcher import GPTResearcher\n\napp = Flask(__name__)\n\n@app.route(\'/report/<report_type>\', methods=[\'GET\'])\nasync def get_report(report_type):\n    query = request.args.get(\'query\')\n    researcher = GPTResearcher(query, report_type)\n    research_result = await researcher.conduct_research()\n    report = await researcher.write_report()\n    \n    source_urls = researcher.get_source_urls()\n    research_costs = researcher.get_costs()\n    research_images = researcher.get_research_images()\n    research_sources = researcher.get_research_sources()\n    \n    return jsonify({\n        "report": report,\n        "source_urls": source_urls,\n        "research_costs": research_costs,\n        "num_images": len(research_images),\n        "num_sources": len(research_sources)\n    })\n\n# Run the server\n# flask run\n'})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"Run the server"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"flask run\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"Example Request"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'curl -X GET "http://localhost:5000/report/research_report?query=what team may win the nba finals?"\n'})}),"\n",(0,n.jsx)(r.h2,{id:"getters-and-setters",children:"Getters and Setters"}),"\n",(0,n.jsx)(r.p,{children:"GPT Researcher provides several methods to retrieve additional information about the research process:"}),"\n",(0,n.jsx)(r.h3,{id:"get-research-sources",children:"Get Research Sources"}),"\n",(0,n.jsx)(r.p,{children:"Sources are the URLs that were used to gather information for the research."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"source_urls = researcher.get_source_urls()\n"})}),"\n",(0,n.jsx)(r.h3,{id:"get-research-context",children:"Get Research Context"}),"\n",(0,n.jsx)(r.p,{children:"Context is all the retrieved information from the research. It includes the sources and their corresponding content."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"research_context = researcher.get_research_context()\n"})}),"\n",(0,n.jsx)(r.h3,{id:"get-research-costs",children:"Get Research Costs"}),"\n",(0,n.jsx)(r.p,{children:"Costs are the number of tokens consumed during the research process."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"research_costs = researcher.get_costs()\n"})}),"\n",(0,n.jsx)(r.h3,{id:"get-research-images",children:"Get Research Images"}),"\n",(0,n.jsx)(r.p,{children:"Retrieves a list of images found during the research process."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"research_images = researcher.get_research_images()\n"})}),"\n",(0,n.jsx)(r.h3,{id:"get-research-sources-1",children:"Get Research Sources"}),"\n",(0,n.jsx)(r.p,{children:"Retrieves a list of research sources, including title, content, and images."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"research_sources = researcher.get_research_sources()\n"})}),"\n",(0,n.jsx)(r.h3,{id:"set-verbose",children:"Set Verbose"}),"\n",(0,n.jsx)(r.p,{children:"You can set the verbose mode to get more detailed logs."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"researcher.set_verbose(True)\n"})}),"\n",(0,n.jsx)(r.h3,{id:"add-costs",children:"Add Costs"}),"\n",(0,n.jsx)(r.p,{children:"You can also add costs to the research process if you want to track the costs from external usage."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"researcher.add_costs(0.22)\n"})}),"\n",(0,n.jsx)(r.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,n.jsx)(r.h3,{id:"customizing-the-research-process",children:"Customizing the Research Process"}),"\n",(0,n.jsx)(r.p,{children:"You can customize various aspects of the research process by passing additional parameters when initializing the GPTResearcher:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'researcher = GPTResearcher(\n    query="Your research query",\n    report_type="research_report",\n    report_format="APA",\n    tone="formal and objective",\n    max_subtopics=5,\n    verbose=True\n)\n'})}),"\n",(0,n.jsx)(r.h3,{id:"handling-research-results",children:"Handling Research Results"}),"\n",(0,n.jsx)(r.p,{children:"After conducting research, you can process the results in various ways:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'# Conduct research\nresearch_result = await researcher.conduct_research()\n\n# Generate a standard report\nreport = await researcher.write_report()\n\n# Generate a customized report with specific formatting requirements\ncustom_report = await researcher.write_report(custom_prompt="Answer in short, 2 paragraphs max without citations.")\n\n# Generate a focused report for a specific audience\nexecutive_summary = await researcher.write_report(custom_prompt="Create an executive summary focused on business impact and ROI. Keep it under 500 words.")\n\n# Generate a report with specific structure requirements\ntechnical_report = await researcher.write_report(custom_prompt="Create a technical report with problem statement, methodology, findings, and recommendations sections.")\n\n# Generate a conclusion\nconclusion = await researcher.write_report_conclusion(report)\n\n# Get subtopics\nsubtopics = await researcher.get_subtopics()\n\n# Get draft section titles for a subtopic\ndraft_titles = await researcher.get_draft_section_titles("Subtopic name")\n'})}),"\n",(0,n.jsx)(r.h3,{id:"customizing-report-generation-with-custom-prompts",children:"Customizing Report Generation with Custom Prompts"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"write_report"})," method accepts a ",(0,n.jsx)(r.code,{children:"custom_prompt"})," parameter that gives you complete control over how your research is presented:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'# After conducting research\nresearch_result = await researcher.conduct_research()\n\n# Generate a report with a custom prompt\nreport = await researcher.write_report(\n    custom_prompt="Based on the research, provide a bullet-point summary of the key findings."\n)\n'})}),"\n",(0,n.jsx)(r.p,{children:"Custom prompts can be used for various purposes:"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Format Control"}),": Specify the structure, length, or style of your report"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'report = await researcher.write_report(\n    custom_prompt="Write a blog post in a conversational tone using the research. Include headings and a conclusion."\n)\n'})}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Audience Targeting"}),": Tailor the content for specific readers"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'report = await researcher.write_report(\n    custom_prompt="Create a report for technical stakeholders, focusing on methodologies and implementation details."\n)\n'})}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Specialized Outputs"}),": Generate specific types of content"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'report = await researcher.write_report(\n    custom_prompt="Create a FAQ section based on the research with at least 5 questions and detailed answers."\n)\n'})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"The custom prompt will be combined with the research context to generate your customized report."}),"\n",(0,n.jsx)(r.h3,{id:"working-with-research-context",children:"Working with Research Context"}),"\n",(0,n.jsx)(r.p,{children:"You can use the research context for further processing or analysis:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:'# Get the full research context\ncontext = researcher.get_research_context()\n\n# Get similar written contents based on draft section titles\nsimilar_contents = await researcher.get_similar_written_contents_by_draft_section_titles(\n    current_subtopic="Subtopic name",\n    draft_section_titles=["Title 1", "Title 2"],\n    written_contents=some_written_contents,\n    max_results=10\n)\n'})}),"\n",(0,n.jsx)(r.p,{children:"This comprehensive documentation should help users understand and utilize the full capabilities of the GPT Researcher package."})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>o});var t=s(6540);const n={},a=t.createContext(n);function c(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);