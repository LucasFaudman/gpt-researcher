"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8717],{939:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=t(8168),s=(t(6540),t(5680));const o={},a="Testing your Retriever",i={unversionedId:"gpt-researcher/search-engines/test-your-retriever",id:"gpt-researcher/search-engines/test-your-retriever",isDocsHomePage:!1,title:"Testing your Retriever",description:"To test your retriever, you can use the following code snippet. The script will search for a sub-query and display the search results.",source:"@site/docs/gpt-researcher/search-engines/test-your-retriever.md",sourceDirName:"gpt-researcher/search-engines",slug:"/gpt-researcher/search-engines/test-your-retriever",permalink:"/docs/gpt-researcher/search-engines/test-your-retriever",editUrl:"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/gpt-researcher/search-engines/test-your-retriever.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Retrievers",permalink:"/docs/gpt-researcher/search-engines/retrievers"},next:{title:"LangGraph",permalink:"/docs/gpt-researcher/multi_agents/langgraph"}},c=[],u={toc:c},l="wrapper";function p(e){let{components:r,...t}=e;return(0,s.yg)(l,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"testing-your-retriever"},"Testing your Retriever"),(0,s.yg)("p",null,"To test your retriever, you can use the following code snippet. The script will search for a sub-query and display the search results."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-python"},'import asyncio\nfrom dotenv import load_dotenv\nfrom gpt_researcher.config.config import Config\nfrom gpt_researcher.actions.retriever import get_retrievers\nfrom gpt_researcher.skills.researcher import ResearchConductor\nimport pprint\n# Load environment variables from .env file\nload_dotenv()\n\nasync def test_scrape_data_by_query():\n    # Initialize the Config object\n    config = Config()\n\n    # Retrieve the retrievers based on the current configuration\n    retrievers = get_retrievers({}, config)\n    print("Retrievers:", retrievers)\n\n    # Create a mock researcher object with necessary attributes\n    class MockResearcher:\n        def init(self):\n            self.retrievers = retrievers\n            self.cfg = config\n            self.verbose = True\n            self.websocket = None\n            self.scraper_manager = None  # Mock or implement scraper manager\n            self.vector_store = None  # Mock or implement vector store\n\n    researcher = MockResearcher()\n    research_conductor = ResearchConductor(researcher)\n    # print(\'research_conductor\',dir(research_conductor))\n    # print(\'MockResearcher\',dir(researcher))\n    # Define a sub-query to test\n    sub_query = "design patterns for autonomous ai agents"\n\n    # Iterate through all retrievers\n    for retriever_class in retrievers:\n        # Instantiate the retriever with the sub-query\n        retriever = retriever_class(sub_query)\n\n        # Perform the search using the current retriever\n        search_results = await asyncio.to_thread(\n            retriever.search, max_results=10\n        )\n\n        print("\\033[35mSearch results:\\033[0m")\n        pprint.pprint(search_results, indent=4, width=80)\n\nif __name__ == "__main__":\n    asyncio.run(test_scrape_data_by_query())\n')),(0,s.yg)("p",null,"The output of the search results will include the title, body, and href of each search result. For example:"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-json"},'[{   \n    "body": "Jun 5, 2024 ... Three AI Design Patterns of Autonomous "\n                "Agents. Overview of the Three Patterns. Three notable AI "\n                "design patterns for autonomous agents include:.",\n    "href": "https://accredianpublication.medium.com/building-smarter-systems-the-role-of-agentic-design-patterns-in-genai-13617492f5df",\n    "title": "Building Smarter Systems: The Role of Agentic Design "\n                "Patterns in ..."},\n    ...]\n')))}p.isMDXComponent=!0},5680:(e,r,t)=>{t.d(r,{xA:()=>l,yg:()=>f});var n=t(6540);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(t),h=s,f=p["".concat(c,".").concat(h)]||p[h]||g[h]||o;return t?n.createElement(f,a(a({ref:r},l),{},{components:t})):n.createElement(f,a({ref:r},l))}));function f(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=t.length,a=new Array(o);a[0]=h;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[p]="string"==typeof e?e:s,a[1]=i;for(var u=2;u<o;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);